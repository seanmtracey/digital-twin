<main>

	<canvas id="creationCanvas"></canvas>

    <div id="nodes">

        <!-- The output are where nodes are persisted -->

    </div>

    <div id="configurePanel" dataset-active="true">
        <h2>Configure Node</h2>
    </div>

    <script>

        (function(){

            'use strict';

            function createNode(x, y, width, height){

                width = width < 0 ? -width : width;
                height = height < 0 ? -height : height;

                const div = document.createElement('div');
                
                div.dataset.left = x;
                div.dataset.top = y;
                div.dataset.width = width;
                div.dataset.height = height;

                div.classList.add('node');
                div.setAttribute("style", `left: ${x}px; top: ${y}px; width: ${width}px; height: ${height}px; background-color: #e6e6e6;`);

                div.addEventListener('mousedown', (e) => {
                    
                    e.stopPropagation();
                    e.stopImmediatePropagation();

                }, true);

                div.addEventListener('mouseup', (e) => {
                    
                    if(!CREATING){
                        e.stopPropagation();
                        e.stopImmediatePropagation();
                    }

                    console.log("Click");

                }, true);

                return div;

            }

            const nodesHolder = document.querySelector('#nodes');
            const creationCanvas = document.querySelector('canvas#creationCanvas');
            const creationCtx = creationCanvas.getContext('2d');

            creationCanvas.width = window.innerWidth;
            creationCanvas.height = window.innerHeight;

            creationCtx.strokeStyle = "1px #333333";

            let CREATING = false;
            let startCoords = undefined;

            nodesHolder.addEventListener('mousedown', (e) => {
                console.log('MOUSEDOWN');
                
                CREATING = true;
                startCoords = {
                    x : e.clientX,
                    y : e.clientY
                };

            }, false);

            nodesHolder.addEventListener('mousemove', (e) => {

                if(CREATING){

                    const selectionWidth = e.clientX - startCoords.x;
                    const selectionHeight = e.clientY - startCoords.y;

                    creationCtx.clearRect(0,0, creationCanvas.width, creationCanvas.height);
                    creationCtx.strokeRect(startCoords.x, startCoords.y, selectionWidth, selectionHeight);
                    creationCtx.stroke();

                }

            }, false);

            nodesHolder.addEventListener('mouseup', (e) => {
                
                console.log('MOUSEUP');
                
                creationCtx.clearRect(0, 0, creationCanvas.width, creationCanvas.height);
                
                const elementWidth = e.clientX - startCoords.x;
                const elementHeight = e.clientY - startCoords.y

                const positionX = e.clientX < startCoords.x ? e.clientX : startCoords.x;
                const positionY = e.clientY < startCoords.y ? e.clientY : startCoords.y;

                const node = createNode(positionX, positionY, elementWidth, elementHeight);

                nodesHolder.appendChild(node);

                CREATING = false;
                startCoords = undefined;

            }, false);

            window.addEventListener('resize', (e) => {
                creationCanvas.width = window.innerWidth;
                creationCanvas.height = window.innerHeight;
            }, false);

        }());

    </script>

</main>